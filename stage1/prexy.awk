#!/usr/bin/env -S awk -f

function error(msg) {
    print "error: " > "/dev/stderr"
    print "#error \"prexy: " msg "\""
    exit 1
}

BEGIN {
    IDLE = 0
    COLLECT = 1

    state = IDLE
}

FNR==1 {
    fname = FILENAME
    sub(".*/", "", fname)  # remove Unix-style path
    sub(".*\\\\", "", fname)  # remove Windows-style path

    fname_ident = fname
    sub("\\.[^.]*$", "", fname_ident)  # remove extension
    gsub(/[^[:alnum:]]+/, "_", fname_ident)
    sub(/^_+/, "", fname_ident)
    sub(/_+$/, "", fname_ident)
    fname_ident = toupper(fname_ident)
    print "#ifndef PREXY_" fname_ident "_H_"
    print "#define PREXY_" fname_ident "_H_"
    print ""
    print "/* Generated by prexy from: " fname " */"
    print ""
}

END {
    print "#endif"
}

/^prexy\s/ {
    if (state != IDLE) {
        print "// " $0
        error("Unexpected 'prexy' while parsing other structure")
    }
    state = COLLECT
    code = ""
}
state == COLLECT {
    print "// " $0
    gsub(/\/\/.*$/, "", $0) # Remove comments
    code = code $0
}
state == COLLECT && /};/ {
    state = IDLE
    count = 0
    if (match(code, /^prexy enum ([[:alnum:]_]+) {(.*)};$/, m)) {
        name = m[1]
        split(m[2], variants, ",")
        print "#define " name "_x_variants(X) \\"
        for (i in variants) {
            if (match(variants[i], /^[[:space:]]+([[:alnum:]_]+)/, m)) {
                ++count
                print "X(" m[1] ") \\"
            }
        }
        print ""
        print "#define " name "_x_count " count
    } else {
        error("Unknown structure type")
    }

    print ""
}
